name: caep-device-compliance-change
description: Transmits CAEP Device Compliance Change events as Security Event Tokens (SET)

# Input parameters for the device compliance change event
inputs:
  audience:
    type: text
    description: Intended recipient of the SET (e.g., https://customer.okta.com/)
    required: true
    validation:
      min: 1
      max: 500

  subject:
    type: text
    description: Subject identifier JSON (e.g., {"format":"account","uri":"acct:user@service.example.com"})
    required: true
    validation:
      min: 1
      max: 2000

  previousStatus:
    type: text
    description: Previous compliance status of the device
    required: true
    validation:
      enum: ["compliant", "not-compliant"]

  currentStatus:
    type: text
    description: Current compliance status of the device
    required: true
    validation:
      enum: ["compliant", "not-compliant"]

  initiatingEntity:
    type: text
    description: What initiated the compliance change (policy, admin, user, system)
    required: false
    validation:
      enum: ["policy", "admin", "user", "system"]

  reasonAdmin:
    type: text
    description: Administrative reason for compliance change (shown to admins, can be JSON for i18n)
    required: false
    validation:
      max: 1000

  reasonUser:
    type: text
    description: User-facing reason for compliance change (shown to users, can be JSON for i18n)
    required: false
    validation:
      max: 1000

  eventTimestamp:
    type: number
    description: Unix timestamp when the compliance changed (defaults to now)
    required: false

  address:
    type: text
    description: Destination URL for the SET transmission
    required: true
    validation:
      min: 1
      max: 500
      regex: ^https?://.*

  addressSuffix:
    type: text
    description: Optional suffix to append to the address
    required: false
    validation:
      max: 100

  issuer:
    type: text
    description: JWT issuer identifier (default https://sgnl.ai/)
    required: false
    validation:
      max: 500

  signingMethod:
    type: text
    description: JWT signing algorithm (default RS256)
    required: false
    validation:
      enum: ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512"]

  userAgent:
    type: text
    description: User-Agent header for HTTP requests
    required: false
    validation:
      max: 200

# Secrets required for operation
secrets:
  SSF_KEY:
    type: text
    description: RSA private key for signing the JWT (PEM format)
    required: true

  SSF_KEY_ID:
    type: text
    description: Key identifier for the JWT header
    required: true

  AUTH_TOKEN:
    type: text
    description: Bearer token for authenticating with the SET receiver
    required: false

# Expected output structure
outputs:
  status:
    type: text
    description: Operation result (success or failed)

  statusCode:
    type: number
    description: HTTP status code from the SET receiver

  body:
    type: text
    description: Response body from the SET receiver

  retryable:
    type: boolean
    description: Whether the error is retryable